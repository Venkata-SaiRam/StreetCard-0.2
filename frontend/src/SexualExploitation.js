import React, {Component} from 'react';
import './LabelWrap.css';
import {Cascader, Col, Collapse, DatePicker, Form, Row} from "antd";

const {Panel} = Collapse;

const ResponseCategory = [
    {
        value: 0,
        label: "No"
    },
    {
        value: 1,
        label: "Yes"
    },
    {
        value: 8,
        label: "Client Doesn't Know"
    },
    {
        value: 9,
        label: "Client Refused"
    },
    {
        value: 99,
        label: "Data Not Collected"
    }
];

const FrequencyOfViolenceOccured = [
    {
        value: 1,
        label: "1-3"
    },
    {
        value: 2,
        label: "4-7"
    },
    {
        value: 3,
        label: "8-11"
    },
    {
        value: 4,
        label: "12 or more"
    },
    {
        value: 8,
        label: "Client Doesn\'t Know"
    },
    {
        value: 9,
        label: "Client Refused"
    },
    {
        value: 99,
        label: "Data Not Collected"
    },
];

class sexualExploitation extends Component {
    constructor(props) {
        super(props);
        this.state = {
            isEnabled: true,
            in_last_3_months_disabled: true,
            how_many_times_disabled: true,
            persuaded_for_exchange_disabled: true,
            in_last_3_months_confirm_disabled: true,
        }
    }

    handleClientResponse(values) {
        if(values[0] === 1) {
            this.setState({
                in_last_3_months_disabled: false,
                how_many_times_disabled: false,
                persuaded_for_exchange_disabled: false});
        }else {
            this.setState({
                in_last_3_months_disabled: true,
                how_many_times_disabled: true,
                persuaded_for_exchange_disabled: true});
                
            this.props.sexualExploitation.form.resetFields("in_last_3_months");
            this.props.sexualExploitation.form.resetFields("how_many_times");
            this.props.sexualExploitation.form.resetFields("persuaded_for_exchange");
        }
    }

    handlePersuadedForExchange(values) {
        if(values[0] === 1) {
            this.setState({in_last_3_months_confirm_disabled: false});
        }else {
            this.setState({in_last_3_months_confirm_disabled: true});
            this.props.sexualExploitation.form.resetFields("in_last_3_months_confirm");
        }
    }

    render(){
        const { sexualExploitation } = this.props;
        const {getFieldDecorator} = sexualExploitation.form;
        const message = "Mandatory field! Please provide a response."

        return(
            <Collapse  style={{backgroundColor: "#f0f9ff"}}>
                <Panel header="Sexual Exploitation" key="4">
                    <Row gutter={8}>
                        <Col span={8}>
                            <Form.Item
                                label="Ever received anything in exchange of sex (eg. money, drugs, etc.)">
                                    {
                                    getFieldDecorator("received_in_exchange", {
                                    rules: [
                                        {
                                            message: {message},
                                            type: "array",
                                            required: true
                                        }
                                    ]
                                    })
                                    (<Cascader
                                        placeholder="Select.."
                                        options={ResponseCategory}
                                        onChange={this
                                            .handleClientResponse
                                            .bind(this)}
                                    >
                                    </Cascader>)
                                    }
                            </Form.Item>
                        </Col>
                        <Col span={8}>

                                <Form.Item
                                    label="In the last 3 months"
                                >{getFieldDecorator("in_last_3_months", {
                                    rules: [
                                        {
                                            message: {message},
                                            type: "array",
                                            required: false
                                        }
                                    ]
                                })(
                                    <Cascader
                                        placeholder="Select.."
                                        options={ResponseCategory}
                                        disabled={this.state.in_last_3_months_disabled}
                                    ></Cascader>)}
                                </Form.Item>
                            </Col>

                            <Col span={8}>

                                <Form.Item
                                    label="How many times"
                                >{getFieldDecorator("how_many_times", {
                                    rules: [
                                        {
                                            message: {message},
                                            required: false,
                                            type: "array"
                                        }
                                    ]
                                })(
                                    <Cascader
                                        placeholder="Select.."
                                        options={FrequencyOfViolenceOccured}
                                        disabled={this.state.how_many_times_disabled}
                                    ></Cascader>)}
                                </Form.Item>
                            </Col>

                            
                    </Row>
                    <Row gutter={8}>
                        <Col span={8}>
                            <Form.Item
                                label="Ever been persuaded or forced to have sex in exchange for something"
                            >{getFieldDecorator("persuaded_for_exchange", {
                                rules: [
                                    {
                                        message: {message},
                                        type: "array",
                                        required: false
                                    }
                                ]
                            })(<Cascader
                                    placeholder="Select.."
                                    options={ResponseCategory}
                                    disabled={this.state.persuaded_for_exchange_disabled}
                                    onChange={this
                                        .handlePersuadedForExchange
                                        .bind(this)}
                                ></Cascader>)
                            }
                            </Form.Item>
                        </Col>
                        <Col span={8}>
                                <Form.Item
                                    label="In the last 3 months"
                                >{getFieldDecorator("in_last_3_months_confirm", {
                                    rules: [
                                        {
                                            message: {message},
                                            required: false,
                                            type: "array"
                                        }
                                    ]
                                })(
                                    <Cascader
                                        placeholder="Select.."
                                        options={ResponseCategory}
                                        disabled={this.state.in_last_3_months_confirm_disabled}
                                    ></Cascader>)}
                                </Form.Item>
                            </Col>
                    </Row>
                </Panel>
            </Collapse>
        );
    }
}
export default sexualExploitation;